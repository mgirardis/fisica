<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<!--
Author: Mauricio Girardi-Schappo, PhD.
Distributed under GNU License v3.0

27th of December, 2010
-->
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<title>Untitled Document</title>

<script type="text/javascript" language="javascript">
function TransCoord(cLrg,cAlt,mxi,myi,mxf,myf) {
	this.Bx = cLrg/(mxf-mxi);
	this.Ax = - this.Bx * mxi;
	this.By = cAlt/(myi-myf);
	this.Ay = - this.By * myf;
}
TransCoord.prototype.cx = function(mx) {
	return this.Ax + this.Bx * mx;
}
TransCoord.prototype.cy = function(my) {
	return this.Ay + this.By * my;
}

function Carga(x, y, q, r, w, h, c, stg) {
	this._x = x;
	this._y = y;
	this._r = r;
	this._q = q;
	this._vx = 50;
	this._vy = 0;
	this._color = c;
	var ymin = -h/20;
	this.tc = new TransCoord(w, h, 0, ymin, w/10, -ymin);
	this.stg = stg;
	this.pi2 = Math.PI * 2;
}

Carga.prototype.draw = function() {
	this.stg.beginPath();
	this.stg.arc(this.tc.cx(this._x),this.tc.cy(this._y),4,0,this.pi2,2);
	this.stg.fillStyle = this._color;
	this.stg.fill();
	this.stg.closePath();
	this.stg.stroke();
}

var part, intervalo, t, dt, stage, x0, y0, cnvWidth, cnvHeight, target;
t = 0;
dt = 0.1;

function canvasReset(w, h) {
	stage.clearRect(0,0,w,h);

	x0 = 0;
	y0 = (Math.random() * 2 - 1)*4;

	part = new Carga(x0,y0,+1,1,w,h,"#C00", stage);
	part.draw();

	var qtCargas = 4;
	target = new Array(qtCargas);
	for (var i = 0; i < qtCargas; i++) {
		target = new Carga(15,0,+1,1,w,h,"#00F", stage);
		target.draw();
	}

	intervalo = setInterval("step()", 10);
}

function calcE(x, y) {
	var E;

	var xRel = x - target._x;
	var yRel = y - target._y;

	var rQuad = xRel*xRel + yRel*yRel;

	E = 1000 * target._q / rQuad;

	var r = Math.sqrt(rQuad);

	var Ex = E * xRel / r;
	var Ey = E * yRel / r;

	return {_x: Ex, _y: Ey};
}

window.onload = function() {
	var canvas = document.getElementById("cnv");
	var attQt = canvas.attributes.length;
	for (var i = 0; i < attQt; i++) {
		if (canvas.attributes[i].nodeName == "width") {
			cnvWidth = canvas.attributes[i].value;
		} else if (canvas.attributes[i].nodeName == "height") {
			cnvHeight = canvas.attributes[i].value;
		}
	}

	stage = canvas.getContext("2d");

	canvasReset(cnvWidth, cnvHeight);
}

function draw() {
	stage.clearRect(0,0,cnvWidth,cnvHeight);
	part.draw();
	target.draw();
}

function step() {
	t += dt;

	var h = 0.01;
	var xi = part._x;
	var yi = part._y;

	var kx1,ky1,kx2,ky2,kx3,ky3,kx4,ky4;
	var E = calcE(part._x, part._y);

	E = calcE(part._x, part._y);
	kx1 = h * E._x;
	ky1 = h * E._y;
	part._x = xi + (h/2) * (part._vx + kx1/2);
	part._y = yi + (h/2) * (part._vy + ky1/2);

	E = calcE(part._x, part._y);
	kx2 = h * E._x;
	ky2 = h * E._y;
	part._x = xi + (h/2) * (part._vx + kx2/2);
	part._y = yi + (h/2) * (part._vy + ky2/2);

	E = calcE(part._x, part._y);
	kx3 = h * E._x;
	ky3 = h * E._y;
	part._x = xi + (h/2) * (part._vx + kx3);
	part._y = yi + (h/2) * (part._vy + ky3);

	E = calcE(part._x, part._y);
	kx4 = h * E._x;
	ky4 = h * E._y;
	part._vx = part._vx + (1/6) * (kx1+2*(kx2+kx3)+kx4);
	part._vy = part._vy + (1/6) * (ky1+2*(ky2+ky3)+ky4);

	part._x = xi + h * (part._vx+(1/6)*(kx1+kx2+kx3));
	part._y = yi + h * (part._vy+(1/6)*(ky1+ky2+ky3));

	draw();
}

</script>

</head>

<body>
<center><canvas id="cnv" width="300" height="300" style="border: 1px solid #000;"></canvas></center>
</body>
</html>
